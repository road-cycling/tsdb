syntax = "proto3";

package ts_proto;

service QueryAndIngest {

  // Write Metrics
  rpc WriteMetrics (MetricWriter) returns (WriteResponse) {}

  // Read Metrics
  rpc QueryMetrics(MetricsReader) returns (ReaderResponse) {}

  // Read Metrics (bypass index)
  rpc QueryUID(UIDReader) returns (ReaderResponse) {}
}

message MetricWriter {
  string namespace = 1;
  string schema = 2;
  map<string, string> dimensions = 3;
  map<string, double> metrics = 4;
  uint32 timestamp = 5;

  uint64 metadataUID = 6;
  map<string, uint64> metricUID = 7;
}

message WriteResponse {
  uint32 metrics_received = 1;
}

message MetricsReader {
  string metric_name = 1;
  map<string, string> dimensions = 2;
  uint32 query_start_time = 3;
  uint32 query_end_time = 4;
}

message ReaderResponse {
  repeated Timeseries points = 1;
}

message Timeseries {
  map<string, string> dimensions = 1;
  repeated TimeseriesPoint points = 2;
}

message TimeseriesPoint {
  uint32 timestamp = 1;
  double value = 2;
}

message UIDReader {
  int64 uid = 1;
  uint32 query_start_time = 2;
  uint32 query_end_time = 3;
}
